import sys
import io

# Set stdout to write UTF-8 encoded text
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

animal_data_list = [
    ["飯能市", "コモシカ, 猪, シカ, イシガメ"],
    ["渡嘉敷村", "ケラマトカゲモドキ, ホオグロヤモリ, アオカナヘビ, オキナワキノボリトカゲ"],
    ["谷川岳", "ツキノワグマ, ニホンカモシカ, ニホンザル, ムササビ, スミスネズミ, イワヒバリ"],
    ["名張市", "オオサンショウウオ, ニホンジカ, ニホンイノシシ, ニホンザル, ノウサギ, ニホンリス, ムササビ, タヌキ, キツネ, テン, スミスネズミ, ハタネズミ"],
    ["南丹市美山", "イヌワシ, オシドリ, ツキノワグマ, ヤマネ"],
    ["小笠原", "アカアシカツオドリ, アカガシラカラスバト, アホウドリ, イソヒヨドリ, オガサワラカワラヒワ, キョウジョシギ"],
    ["てしかがえこまち", "エゾシカ, ヒグマ, エゾシマリス, エゾリス, キタキツネ, エゾモモンガ, エゾオコジョ"],
    ["上市まちのわ", "エナガ, ウグイス, カワガラス, ヤマドリ, アオサギ, ツキノワグマ, ハクビシン"],
    ["石鎚山系", "オオアカゲラ, ゴジュウカラ"],
    ["串間", "アナグマ, クマネズミ, コシジロヤマドリ, オオコノハズク, ニホントカゲ, カナヘビ"],
    ["奄美市", "アマミノクロウサギ, オットンガエル, アマミヤマシギ"],
    ["檜原村", "クマタカ, ツキノワグマ, アブラコウモリ, ヤマネ, モモンガ"],
    ["下呂市", "ツキノワグマ, ヤマネ, ムササビ, リス, テン, キクガシラコウモリ, ヤマバト, アカゲラ, ホトトギス"],
    ["赤城山", "カモシカ, ツキノワグマ, アナグマ, ヤマネ, キレンジャク, ヒレンジャク, ホトトギス, ヤマドリ, クマタカ, オオタカ, ノスリ, チョウゲンボウ"],
    ["阿蘇ジオパーク", "カモシカ, オオサンショウウオ, ヤマネ, イヌワシ, ゴイシツバメシジミ, ベッコウサンショウウオ, コジュリン, オオジシギ, コヨシキリ"],
    ["吉野川紀の川源流", "ニホンジカ, ニホンカモシカ, ニホンイノシシ, ツキノワグマ, ニホンアナグマ, ニホンザル, ニホンリス, ムササビ, ホンシュウモモンガ, ノウサギ, テン, アカネズミ, ヒメネズミ"],
    ["宮島", "アナグマ, タヌキ, イノシシ, アオサギ, アオバズク, ウグイス, ウミネコ, エナガ, オオルリ, キビタキ, コゲラ, シジュウカラ, ヤマドリ, ミサゴ"],
    ["白川郷", "オコジョ, ホンドテン, ホンドイタチ, ツキノワグマ, ニホンリス, ホンドモモンガ, ムササビ, ノウサギ, ホンドキツネ, ニホンアナグマ, ホンドタヌキ, オオタカ, ハイタカ, フクロウ"],
    ["軽井沢町", "ツキノワグマ, ニホンザル, ニホンジカ, イノシシ, ニホンカモシカ, アナグマ, イタチ, テン, タヌキ, ヤマネ, キクガシラコウモリ, アオゲラ"],
    ["群馬県 みなかみ町", "イタチ, アナグマ, ハクビシン, テン, ヤマネ, ニホンマムシ, ニホンカナヘビ"],
    ["竹富町西表島", "リュウキュウイノシシ, サキシマカナヘビ, クマネズミ, オオゴマダラ"],
    ["東近江市", "ヤマドリ, アオバト, ハチクマ, クロツグミ, オオルリ"]
]

def search_habitat(animal_name):
    """
    Search for the locations where a given animal is found using animal_data_list.
    """
    matching_locations = []

    for location, animals in animal_data_list:
        if animal_name in animals:
            matching_locations.append(location)

    if matching_locations:
        return f"{animal_name} が見つける場所: {', '.join(matching_locations)}"
    else:
        return f"推進地に見つけない {animal_name}."

if __name__ == "__main__":
    try:
        if len(sys.argv) > 1:
            animal_name = sys.argv[1]
            print(search_habitat(animal_name))
        else:
            print("動物の名前を指定してください。")
    except Exception as e:
        print(f"エラーが発生しました: {e}")
        sys.exit(1)
